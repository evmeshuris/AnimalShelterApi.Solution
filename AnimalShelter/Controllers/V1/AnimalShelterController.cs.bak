 //   using Microsoft.AspNetCore.Mvc;
 //   using AnimalShelter.Attributes;

 //   namespace AnimalShelter.Controllers.V1;

 //   [ApiController]
 //   [Route("v1/[controller]")]
 //   public class AnimalShelterController : ControllerBase
 //   {
 //   [HttpGet]
 //   public IEnumerable<Animal> Get()
 //   {
 //       return new Animal[0];
 //   //    {
 //   //    new Animal(1, "Bethoween", "Dog"),
 //   //    new Animal(2, "Gizmo", "Cat"),
 //   //    new Animal(3, "Panter", "Cat"),
 //   //    new Animal(4, "Spooky", "Dog")
 //   //};
 //   }

 //   [HttpPost]
 //   public IActionResult Create(Animal animal)
 //   {
 //   return Ok(new { message = $"Animal {animal.Name} has been created" });
 //   // public async Task<ActionResult<Animal>> Post( Animal animal)
 //   //     {
 //   //         _db.Animals.Add(animal);
 //   //         await _db.SaveChangesAsync();
 //   //         return CreatedAtAction(nameof(GetAnimal), new { id = animal.AnimalId}, animal);
 //   //     }
 //   }
 //   // public async Task<ActionResult<Animal>> GetAnimal(int id)
 //   //     {
 //   //         var animal= await _db.Animals.FindAsync(id);
 //   //         if(animal == null)
 //   //         {
 //   //             return NotFound();
 //   //         }
 //   //         return animal;
 //   //     }
 //   //     public async Task<IActionResult> Put(int id, Animal animal)
 //   //     {
 //   //         if(id != animal.AnimalId)
 //   //         {
 //   //             return BadRequest();
 //   //         }
 //   //         _db.Entry(animal).State = EntityState.Modified;
 //   //         try
 //   //         {
 //   //             await _db.SaveChangesAsync();
 //   //         }
 //   //         catch (DbUpdateConcurrencyException)
 //   //         {
 //   //             if(!AnimalExists(id))
 //   //             {
 //   //                 return NotFound();
 //   //             }
 //   //             else
 //   //             {
 //   //                 throw;
 //   //             }
 //   //         }
 //   //         return NoContent();
 //   //     }
 //   //     public async Task<IActionResult> DeleteAnimal(int id)
	//// 		{
	//// 			var animal = await _db.Animals.FindAsync(id);
	//// 			if(animal == null)
	//// 			{
	//// 				return NotFound();
	//// 			}
	//// 			_db.Animals.Remove(animal);
	//// 			await _db.SaveChangesAsync();
	//// 			return NoContent();
	//// 		}
 //   }
